name: Update Project Prices

on:
  push:
    paths:
      - 'projects/*/prices.json'
    branches:
      - main
  workflow_dispatch:
    inputs:
      project_id:
        description: 'ID projektu k aktualizaci (např. asv-solnice)'
        required: false
        type: string

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.detect.outputs.projects }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
        
    - name: Detect changed projects
      id: detect
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.project_id }}" ]; then
          # Manuální spuštění pro konkrétní projekt
          echo "projects=[\"${{ github.event.inputs.project_id }}\"]" >> $GITHUB_OUTPUT
        else
          # Automatická detekce změn
          changed_files=$(git diff --name-only HEAD^ HEAD)
          projects=()
          
          for file in $changed_files; do
            if [[ $file =~ ^projects/([^/]+)/prices\.json$ ]]; then
              project_id="${BASH_REMATCH[1]}"
              if [[ ! " ${projects[@]} " =~ " ${project_id} " ]]; then
                projects+=("$project_id")
              fi
            fi
          done
          
          if [ ${#projects[@]} -eq 0 ]; then
            echo "projects=[]" >> $GITHUB_OUTPUT
          else
            projects_json=$(printf '"%s",' "${projects[@]}")
            projects_json="[${projects_json%,}]"
            echo "projects=$projects_json" >> $GITHUB_OUTPUT
          fi
        fi

  update-prices:
    needs: detect-changes
    if: needs.detect-changes.outputs.projects != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.detect-changes.outputs.projects) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Verify project exists
      run: |
        if [ ! -d "projects/${{ matrix.project }}" ]; then
          echo "❌ Projekt ${{ matrix.project }} neexistuje"
          exit 1
        fi
        
        if [ ! -f "projects/${{ matrix.project }}/prices.json" ]; then
          echo "❌ Soubor prices.json pro projekt ${{ matrix.project }} neexistuje"
          exit 1
        fi
        
        echo "✅ Projekt ${{ matrix.project }} je validní"
        
    - name: Update project HTML
      run: |
        echo "🚀 Aktualizuji projekt: ${{ matrix.project }}"
        node .github/scripts/update-project-prices.js ${{ matrix.project }}
      
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "✅ Nalezeny změny v projektu ${{ matrix.project }}"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ Žádné změny v projektu ${{ matrix.project }}"
        fi
        
    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add projects/${{ matrix.project }}/
        git commit -m "🤖 Aktualizace cen pro projekt ${{ matrix.project }}

        Automaticky vygenerováno z projects/${{ matrix.project }}/prices.json
        
        🚀 Generated by GitHub Actions"
        
    - name: Push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main

  # Backup job pro starý formát (kompatibilita)
  legacy-update:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'prices.json') && !contains(github.event.head_commit.modified, 'projects/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Update legacy format
      run: |
        echo "🔄 Aktualizuji starý formát prices.json"
        if [ -f ".github/scripts/update-prices.js" ]; then
          node .github/scripts/update-prices.js
        else
          echo "⚠️ Starý skript nenalezen"
        fi
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add index.html
        git commit -m "🤖 Legacy aktualizace cen z prices.json"
        
    - name: Push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main